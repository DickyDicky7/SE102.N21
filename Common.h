#pragma once

#define DIRECTINPUT_VERSION 0x0800

#include <vector>
#include <d3d9.h>
#include <d3dx9.h>
#include <utility>
#include <concepts>
#include <dinput.h>
#include <Windows.h>
#include <type_traits>
#include <unordered_map>

enum SPRITE_ID
{
	BILL_NORMAL_01,

	BILL_NORMAL_SHOT_01,
	BILL_NORMAL_SHOT_02,

	BILL_STRAIGHT_UP_01,

	BILL_SHOT_STRAIGHT_UP_01,
	BILL_SHOT_STRAIGHT_UP_02,

	BILL_LAYDOWN_01,

	BILL_JUMP_01,
	BILL_JUMP_02,
	BILL_JUMP_03,
	BILL_JUMP_04,

	BILL_RUN_01,
	BILL_RUN_02,
	BILL_RUN_03,
	BILL_RUN_04,
	BILL_RUN_05,
	BILL_RUN_06,

	BILL_RUN_SHOT_ANGLE_UP_01,
	BILL_RUN_SHOT_ANGLE_UP_02,
	BILL_RUN_SHOT_ANGLE_UP_03,

	BILL_RUN_SHOT_ANGLE_DOWN_01,
	BILL_RUN_SHOT_ANGLE_DOWN_02,
	BILL_RUN_SHOT_ANGLE_DOWN_03,

	BILL_DEAD_01,
	BILL_DEAD_02,
	BILL_DEAD_03,
	BILL_DEAD_04,

	BILL_BEGIN_SWIM_01,

	BILL_DIVE_01,

	BILL_SWIM_01,

	BILL_SWIM_SHOT_ANGLE_UP_01,

	BILL_SWIM_SHOT_STRAIGHT_UP_01,

	BILL_SWIM_SHOT_01,

	BILL_RUN_SHOT_01,
	BILL_RUN_SHOT_02,
	BILL_RUN_SHOT_03,

#pragma region WALL_TURRET
	WALL_TURRET_LEFT_01,
	WALL_TURRET_LEFT_02,
	WALL_TURRET_LEFT_03,

	WALL_TURRET_LEFT_DOWN_30_01,
	WALL_TURRET_LEFT_DOWN_30_02,
	WALL_TURRET_LEFT_DOWN_30_03,

	WALL_TURRET_LEFT_DOWN_60_01,
	WALL_TURRET_LEFT_DOWN_60_02,
	WALL_TURRET_LEFT_DOWN_60_03,

	WALL_TURRET_DOWN_01,
	WALL_TURRET_DOWN_02,
	WALL_TURRET_DOWN_03,

	WALL_TURRET_RIGHT_DOWN_60_01,
	WALL_TURRET_RIGHT_DOWN_60_02,
	WALL_TURRET_RIGHT_DOWN_60_03,

	WALL_TURRET_RIGHT_DOWN_30_01,
	WALL_TURRET_RIGHT_DOWN_30_02,
	WALL_TURRET_RIGHT_DOWN_30_03,

	WALL_TURRET_RIGHT_01,
	WALL_TURRET_RIGHT_02,
	WALL_TURRET_RIGHT_03,

	WALL_TURRET_RIGHT_UP_30_01,
	WALL_TURRET_RIGHT_UP_30_02,
	WALL_TURRET_RIGHT_UP_30_03,

	WALL_TURRET_RIGHT_UP_60_01,
	WALL_TURRET_RIGHT_UP_60_02,
	WALL_TURRET_RIGHT_UP_60_03,

	WALL_TURRET_UP_01,
	WALL_TURRET_UP_02,
	WALL_TURRET_UP_03,
		
	WALL_TURRET_LEFT_UP_60_01,
	WALL_TURRET_LEFT_UP_60_02,
	WALL_TURRET_LEFT_UP_60_03,

	WALL_TURRET_LEFT_UP_30_01,
	WALL_TURRET_LEFT_UP_30_02,
	WALL_TURRET_LEFT_UP_30_03,

#pragma endregion 
};

enum TEXTURE_ID
{

	BILL,

	WALL_TURRET

};

enum ANIMATION_ID
{

	BILL_NORMAL,
	BILL_NORMAL_SHOT,
	BILL_STRAIGHT_UP,
	BILL_SHOT_STRAIGHT_UP,
	BILL_LAYDOWN,
	BILL_JUMP,
	BILL_RUN,
	BILL_RUN_SHOT_ANGLE_UP,
	BILL_RUN_SHOT_ANGLE_DOWN,
	BILL_DEAD,
	BILL_BEGIN_SWIM,
	BILL_DIVE,
	BILL_SWIM,
	BILL_SWIM_SHOT_ANGLE_UP,
	BILL_SWIM_SHOT_STRAIGHT_UP,
	BILL_SWIM_SHOT,
	BILL_RUN_SHOT,

#pragma region WALL_TURRET_ANIMATIONS

	WALL_TURRET_LEFT,
	WALL_TURRET_RIGHT,
	WALL_TURRET_DOWN,
	WALL_TURRET_UP,
	WALL_TURRET_RIGHT_UP_30,
	WALL_TURRET_RIGHT_UP_60,
	WALL_TURRET_RIGHT_DOWN_30,
	WALL_TURRET_RIGHT_DOWN_60,
	WALL_TURRET_LEFT_DOWN_30,
	WALL_TURRET_LEFT_DOWN_60,
	WALL_TURRET_LEFT_UP_30,
	WALL_TURRET_LEFT_UP_60,

#pragma endregion

};

#define SCREEN_WIDTH 1000
#define SCREEN_HEIGHT 600

enum DIRECTION
{
	LEFT, RIGHT, CLOCKWISE, COUNTERCLOCKWISE
};


template <class T>
struct Bool { BOOL value; };